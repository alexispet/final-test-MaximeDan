name: CI/CD
run-name: ${{github.actor }} runs the CI/CD pipeline
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  NODE_ENV: development

jobs:
  dependency-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm audit --audit-level=high


  test-app:
    name: Test App
    runs-on: ubuntu-latest
    needs: dependency-audit
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker compose build
        run: docker compose up -d --wait

      - name: Run tests
        run: docker compose exec app npm run test

      - name: Stop services
        run: docker compose down

  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    needs: dependency-audit
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.5.0'

      - name: Install ESLint
        run: |
          npm install

      - name: Run ESLint
        run: npm run lint

  build-docker-prod:
    runs-on: ubuntu-latest
    needs: [test-app, lint]
    if: github.ref_type == 'tag' || github.ref_name == 'main'
    environment:
      name: production
      url: ${{ vars.APP_URL }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/express

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-docker-dev:
    runs-on: ubuntu-latest
    needs: [test-app, lint]
    if: github.ref_name == 'develop'
    environment:
      name: development
      url: ${{ vars.APP_URL }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/express

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
